.modal-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.09);  /* Fondo oscuro semi-transparente */
    display: flex;
    flex-direction: column;  /* Coloca el loader y el texto en columna */
    justify-content: center;
    align-items: center;
    z-index: 1050; /* Asegúrate de que el overlay esté por encima del contenido */
}

.WaitingMakeUser {
    width: 40px;
    height: 40px;
    position: relative;
    --c: no-repeat linear-gradient(rgb(78, 115, 223) 0 0);
    background: var(--c) center/100% 10px,
    var(--c) center/10px 100%;
}

.WaitingMakeUser:before {
    content: '';
    position: absolute;
    inset: 0;
    background: var(--c) 0 0,
    var(--c) 100% 0,
    var(--c) 0 100%,
    var(--c) 100% 100%;
    background-size: 15.5px 15.5px;
    animation: l16 1.5s infinite cubic-bezier(0.3,1,0,1);
}

@keyframes l16 {
    33% { inset: -10px; transform: rotate(0deg); }
    66% { inset: -10px; transform: rotate(90deg); }
    100% { inset: 0; transform: rotate(90deg); }
}

.loader-text {
    margin-top: 25px; 
    font-size: 18px;
    color: #4e73df; 
    font-weight: bold;
}




@supports (-webkit-appearance: none) or (-moz-appearance: none) {
    .checkbox-wrapper-14 input[type=checkbox] {
        --active: #4e73df;
        --active-inner: #fff;
        --focus: 2px rgba(39, 94, 254, .3);
        --border: #BBC1E1;
        --border-hover: #275EFE;
        --background: #fff;
        --disabled: #F6F8FF;
        --disabled-inner: #E1E6F9;
        -webkit-appearance: none;
        -moz-appearance: none;
        height: 21px;
        outline: none;
        display: inline-block;
        vertical-align: top;
        position: relative;
        margin: 0;
        cursor: pointer;
        border: 1px solid var(--bc, var(--border));
        background: var(--b, var(--background));
        transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
    }
    .checkbox-wrapper-14 input[type=checkbox]:after {
        content: "";
        display: block;
        left: 0;
        top: 0;
        position: absolute;
        transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
    }
    .checkbox-wrapper-14 input[type=checkbox]:checked {
        --b: var(--active);
        --bc: var(--active);
        --d-o: .3s;
        --d-t: .6s;
        --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }
    .checkbox-wrapper-14 input[type=checkbox]:disabled {
        --b: var(--disabled);
        cursor: not-allowed;
        opacity: 0.9;
    }
    .checkbox-wrapper-14 input[type=checkbox]:disabled:checked {
        --b: var(--disabled-inner);
        --bc: var(--border);
    }
    .checkbox-wrapper-14 input[type=checkbox]:disabled + label {
        cursor: not-allowed;
    }
    .checkbox-wrapper-14 input[type=checkbox]:hover:not(:checked):not(:disabled) {
        --bc: var(--border-hover);
    }
    .checkbox-wrapper-14 input[type=checkbox]:focus {
        box-shadow: 0 0 0 var(--focus);
    }
    .checkbox-wrapper-14 input[type=checkbox]:not(.switch) {
        width: 21px;
    }
    .checkbox-wrapper-14 input[type=checkbox]:not(.switch):after {
        opacity: var(--o, 0);
    }
    .checkbox-wrapper-14 input[type=checkbox]:not(.switch):checked {
        --o: 1;
    }
    .checkbox-wrapper-14 input[type=checkbox] + label {
        display: inline-block;
        vertical-align: middle;
        cursor: pointer;
        margin-left: 4px;
    }

    .checkbox-wrapper-14 input[type=checkbox]:not(.switch) {
        border-radius: 7px;
    }
    .checkbox-wrapper-14 input[type=checkbox]:not(.switch):after {
        width: 5px;
        height: 9px;
        border: 2px solid var(--active-inner);
        border-top: 0;
        border-left: 0;
        left: 7px;
        top: 4px;
        transform: rotate(var(--r, 20deg));
    }
    .checkbox-wrapper-14 input[type=checkbox]:not(.switch):checked {
        --r: 43deg;
    }
    .checkbox-wrapper-14 input[type=checkbox].switch {
        width: 38px;
        border-radius: 11px;
    }
    .checkbox-wrapper-14 input[type=checkbox].switch:after {
        left: 2px;
        top: 1px;
        border-radius: 50%;
        width: 17px;
        height: 17px;
        background: var(--ab, var(--border));
        transform: translateX(var(--x, 0));
    }
    .checkbox-wrapper-14 input[type=checkbox].switch:checked {
        --ab: var(--active-inner);
        --x: 17px;
    }
    .checkbox-wrapper-14 input[type=checkbox].switch:disabled:not(:checked):after {
        opacity: 0.6;
    }
}

.checkbox-wrapper-14 * {
    box-sizing: inherit;
}
.checkbox-wrapper-14 *:before,
.checkbox-wrapper-14 *:after {
    box-sizing: inherit;
}

