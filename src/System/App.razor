@using wsmcbl.src.Utilities
@inject Navigator Navigator
@inject CustomAuthenticationStateProvider CustomAuthenticationStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (isAuthenticationChecked == false)
                    {
                        <div class="loader"></div>
                    }
                    else
                    {
                        Navigator.ToPage(context.User.Identity?.IsAuthenticated != true ? "/" : "/not-authorized");
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                @{
                    Navigator.ToPage("/not-authorized");
                }
                ;
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private AuthenticationState _authenticationState;
    private bool isAuthenticationChecked = false;

    protected override async Task OnInitializedAsync()
    {
        _authenticationState = await CustomAuthenticationStateProvider.GetAuthenticationStateAsync();
        isAuthenticationChecked = true;
    }
}