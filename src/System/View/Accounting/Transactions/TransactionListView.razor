@page "/accounting/reports/transactions"

@inherits BaseView
@attribute [Authorize(Roles = "admin,cashier")]

@using wsmcbl.src.Utilities
@using wsmcbl.src.View.Components

@if (IsLoading())
{
    <div class="loader"></div>
}
else
{
    <div class="card shadow h-100 py-2 mb-4">

        <div class="card-body">

            <div class="row no-gutters align-items-center">
                <div class="col mr-2">
                    <div class="d-flex justify-content-center align-items-center mb-3">
                        <h5 class="m-0 font-weight-bold text-primary">Lista de Transacciones</h5>
                    </div>
                </div>
            </div>

            <hr>
            <!---------------------------------------------------------->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="d-flex align-items-center">
                        Mostrar
                        <select class="form-control form-control-sm d-inline-block w-auto mx-2" @onchange="ShowPageSize">
                            <option value="10">10</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                        registros
                    </label>
                </div>

                <div class="col-md-6 d-flex justify-content-end">
                    <div class="input-group" style="width: 200px;">
                        <input type="text" class="form-control form-control-sm" placeholder="Buscar..." @bind="Request.SearchText" @onkeyup="Searching">
                        @if (!string.IsNullOrEmpty(Request.SearchText))
                        {
                            <div class="">
                                <button type="button" class="btn btn-sm btn-outline-secondary" @onclick="ClearSearch">
                                    ✖
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
            @if (!hasData)
            {
                <div class="d-flex align-items-center justify-content-center">
                    <h5 class="text-gray-800">Sin datos</h5>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-bordered">

                        <thead>
                        <tr>
                            <th @onclick="@(() => SortByColumn("transactionId"))"
                                class="@(Request.sortBy == "transactionId" ? "font-weight-bold" : "")">
                                # Trans
                                <span>@(Request.sortBy == "transactionId" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>

                            <th @onclick="@(() => SortByColumn("studentId"))"
                                class="@(Request.sortBy == "studentId" ? "font-weight-bold" : "")">
                                Código Est.
                                <span>@(Request.sortBy == "studentId" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>
                            
                            <th @onclick="@(() => SortByColumn("studentName"))"
                                class="@(Request.sortBy == "studentName" ? "font-weight-bold" : "")">
                                Estudiante
                                <span>@(Request.sortBy == "studentName" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>

                            <th @onclick="@(() => SortByColumn("enrollmentLabel"))"
                                class="@(Request.sortBy == "enrollmentLabel" ? "font-weight-bold" : "")">
                                Matrícula
                                <span>@(Request.sortBy == "enrollmentLabel" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>

                            <th @onclick="@(() => SortByColumn("type"))"
                                class="@(Request.sortBy == "type" ? "font-weight-bold" : "")">
                                Tipo
                                <span>@(Request.sortBy == "type" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>

                            <th @onclick="@(() => SortByColumn("total"))"
                                class="@(Request.sortBy == "total" ? "font-weight-bold" : "")">
                                Monto
                                <span>@(Request.sortBy == "total" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>

                            <th @onclick="@(() => SortByColumn("dateTime"))"
                                class="@(Request.sortBy == "dateTime" ? "font-weight-bold" : "")">
                                Fecha
                                <span>@(Request.sortBy == "dateTime" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>

                            <th @onclick="@(() => SortByColumn("isValid"))"
                                class="@(Request.sortBy == "isValid" ? "font-weight-bold" : "")">
                                Estado
                                <span>@(Request.sortBy == "isValid" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>

                            <th>Acciónes</th>
                        </tr>
                        </thead>

                        <tbody>
                        @foreach (var item in transactionList!.data)
                        {
                            <tr>
                                <td> @item.transactionId</td>
                                <td> @item.studentId</td>
                                <td> @item.studentName</td>
                                <td> @item.enrollmentLabel</td>
                                <td> @getTransactionDescription(item.type)</td>
                                <td> @item.total</td>
                                <td> @item.dateTime.ToDateTimeFormat()</td>
                                <td> @item.isValid.ToStringValid()</td>
                                <td>
                                    <div class="dropdown no-arrow">
                                        <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                                           data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                        </a>

                                        <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                             aria-labelledby="dropdownMenuLink">
                                            <div class="dropdown-header">Seleccione una opción:</div>
                                            <a class="dropdown-item"
                                               @onclick="() => GetInvoicePdf(item.transactionId)">Ver recibo</a>
                                            <a class="dropdown-item"
                                               @onclick="() => CancelTransactions(item.transactionId)">Anular</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
                <div class="row">

                    <div class="col-sm-12 col-md-5">
                        <p>
                            Mostrando @transactionList.data.Count registros de @transactionList.quantity
                        </p>
                    </div>

                    <div class="col-sm-12 col-md-7">
                        <div class="dataTables_paginate paging_simple_numbers">
                            <ul class="pagination d-flex justify-content-end">
                                <!-- Botón Anterior -->
                                <li class="paginate_button page-item @(Request.CurrentPage == 1 ? "disabled" : "")">
                                    <a @onclick="GoToPreviousPage" class="page-link">Anterior</a>
                                </li>

                                <!-- Primera Página -->
                                <li class="paginate_button page-item @(Request.CurrentPage == 1 ? "active" : "")">
                                    <a @onclick="() => ShowPage(1)" class="page-link">1</a>
                                </li>

                                <!-- ... si la página actual está lejos de la primera página -->
                                @if (Request.CurrentPage > 3)
                                {
                                    <li class="paginate_button page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }

                                <!-- Páginas adyacentes a la página actual -->
                                @for (int i = Math.Max(2, Request.CurrentPage - 2); i <= Math.Min(transactionList.totalPages - 1, Request.CurrentPage + 2); i++)
                                {
                                    <li class="paginate_button page-item @(Request.CurrentPage == i ? "active" : "")">
                                        <a @onclick="() => ShowPage(i)" class="page-link">@i</a>
                                    </li>
                                }

                                <!-- ... si la página actual está lejos de la última página -->
                                @if (Request.CurrentPage < transactionList.totalPages - 2)
                                {
                                    <li class="paginate_button page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }

                                <!-- Última Página -->
                                @if (transactionList.totalPages > 1)
                                {
                                    <li class="paginate_button page-item @(Request.CurrentPage == transactionList.totalPages ? "active" : "")">
                                        <a @onclick="() => ShowPage(transactionList.totalPages)" class="page-link">@transactionList.totalPages</a>
                                    </li>
                                }

                                <!-- Botón Siguiente -->
                                <li class="paginate_button page-item @(Request.CurrentPage == transactionList.totalPages ? "disabled" : "")">
                                    <a @onclick="GoToNextPage" class="page-link">Siguiente</a>
                                </li>
                            </ul>
                        </div>
                    </div>

                </div>
            }
            <!---------------------------------------------------------->
        </div>
    </div>

    <PdfViewer Title="Recibo de transacción" PdfContent="@InvoicePdf"/>
}
