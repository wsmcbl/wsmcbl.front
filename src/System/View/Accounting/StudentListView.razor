@page "/accounting/students"

@inherits BaseView
@attribute [Authorize(Roles = "admin,cashier")]

@using wsmcbl.src.Model.Accounting
@using wsmcbl.src.Utilities
@using wsmcbl.src.View.Components.CreateStudent;

@if (IsLoading())
{
    <div class="loader"></div>
}
else
{
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Perfiles de cobro</h6>

            <div class="btn-group">
                <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#NewStudentModal">
                    Nuevo estudiante
                </button>

                <button type="button" class="btn btn-success btn-sm dropdown-toggle dropdown-toggle-split"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="sr-only">Toggle Dropdown</span>
                </button>

                <div class="dropdown-menu">
                    <a class="dropdown-item" @onclick="LoadStudentList">Actualizar</a>
                </div>
            </div>
        </div>

        <!------------------------------------------------------------------------------------------------------------------------------------->
        <div class="card-body">

            <div class="row mb-3 align-items-center">
                <!-- Selector de registros por página -->
                <div class="col-12 col-sm-6 mb-2 mb-sm-0">
                    <div class="d-flex align-items-center flex-wrap">
                        <label class="mb-0 mr-2">Mostrar</label>
                        <select class="form-control form-control-sm d-inline-block w-auto mx-2"
                                @onchange="ShowPageSize">
                            <option value="10">10</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                        <span class="text-nowrap">registros</span>
                    </div>
                </div>

                <!-- Barra de búsqueda -->
                <div class="col-12 col-sm-6">
                    <div class="input-group input-group-sm">
                        <input type="text"
                               class="form-control"
                               placeholder="Buscar estudiantes..."
                               @bind="Request.SearchText"
                               @onkeyup="Searching"
                               aria-label="Buscar estudiantes">

                        @if (!string.IsNullOrEmpty(Request.SearchText))
                        {
                            <div class="input-group-append">
                                <button type="button"
                                        class="btn btn-outline-secondary"
                                        @onclick="ClearSearch"
                                        aria-label="Limpiar búsqueda">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        }
                        <div class="input-group-append">
                            <button type="button"
                                    class="btn btn-primary"
                                    @onkeyup="Searching"
                                    aria-label="Buscar">
                                <i class="fas fa-search"></i>
                                <span class="d-none d-sm-inline ml-1">Buscar</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            @if (!hasData)
            {
                <div class="d-flex align-items-center justify-content-center">
                    <h5 class="text-gray-800">Sin datos</h5>
                </div>
            }
            else
            {
                <!-- Versión para Desktop -->
                <div class="table-responsive">
                    <div class="d-none d-md-block">
                        <table class="table table-bordered">

                            <thead>
                            <tr>

                                <th @onclick="@(() => SortByColumn("studentId"))"
                                    class="@(Request.sortBy == "studentId" ? "font-weight-bold" : "")">
                                    Id
                                    <span>@(Request.sortBy == "studentId" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                                </th>

                                <th @onclick="@(() => SortByColumn("fullName"))"
                                    class="@(Request.sortBy == "fullName" ? "font-weight-bold" : "")">
                                    Nombre
                                    <span>@(Request.sortBy == "fullName" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                                </th>

                                <th @onclick="@(() => SortByColumn("tutor"))"
                                    class="@(Request.sortBy == "tutor" ? "font-weight-bold" : "")">
                                    Tutor
                                    <span>@(Request.sortBy == "tutor" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                                </th>

                                <th @onclick="@(() => SortByColumn("enrollment"))"
                                    class="@(Request.sortBy == "enrollment" ? "font-weight-bold" : "")">
                                    Matrícula
                                    <span>@(Request.sortBy == "enrollment" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                                </th>

                                <th>Acción</th>
                            </tr>
                            </thead>

                            <tbody>
                            @foreach (var item in StudentList!.data)
                            {
                                <tr>
                                    <td>@item.studentId</td>
                                    <td>@item.fullName</td>
                                    <td>@item.tutor</td>
                                    <td>@item.enrollmentLabel</td>
                                    <td>
                                        <a href="/accounting/students/@item.studentId" class="btn btn-success btn-sm">Ver
                                            perfil</a>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
                
                <!-- Versión para Mobile -->
                <div class="d-md-none">
                    @foreach (var item in StudentList!.data)
                    {
                        <div class="card mb-3 shadow-sm">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h6 class="font-weight-bold mb-1">@item.fullName</h6>
                                        <small class="text-muted">ID: @item.studentId</small>
                                    </div>
                                </div>

                                <div class="mt-2">
                                    <div class="d-flex justify-content-between mb-1">
                                        <span class="text-muted">Tutor:</span>
                                        <span>@item.tutor</span>
                                    </div>
                                    <div class="d-flex justify-content-between mb-2">
                                        <span class="text-muted">Matrícula:</span>
                                        <span>@item.enrollmentLabel</span>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-around mt-2">
                                    <a href="/accounting/students/@item.studentId"
                                       class="btn btn-sm btn-outline-success"
                                       title="Ver perfil">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Versión para Mobile -->
                <div class="row align-items-center">
                    <!-- Información de registros - ahora centrado verticalmente -->
                    <div class="col-12 col-md-5 mb-2 mb-md-0 text-center text-md-left">
                        <p class="mb-0">
                            Mostrando <span class="font-weight-bold">@StudentList.data.Count</span> de
                            <span class="font-weight-bold">@StudentList.quantity</span> registros
                        </p>
                    </div>

                    <!-- Paginación - rediseñada para mobile -->
                    <div class="col-12 col-md-7">
                        <nav aria-label="Paginación de resultados">
                            <ul class="pagination justify-content-center justify-content-md-end mb-0">
                                <!-- Botón Anterior -->
                                <li class="page-item @(Request.CurrentPage == 1 ? "disabled" : "")">
                                    <a @onclick="GoToPreviousPage" class="page-link" aria-label="Anterior">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>

                                <!-- Primera Página - solo visible cuando no es la página actual -->
                                @if (Request.CurrentPage > 1)
                                {
                                    <li class="page-item d-none d-sm-block">
                                        <a @onclick="() => ShowPage(1)" class="page-link">1</a>
                                    </li>
                                }

                                <!-- Puntos suspensivos si hay páginas ocultas al inicio -->
                                @if (Request.CurrentPage > 3)
                                {
                                    <li class="page-item disabled d-none d-sm-block">
                                        <span class="page-link">...</span>
                                    </li>
                                }

                                <!-- Páginas alrededor de la actual -->
                                @{
                                    var startPage = Math.Max(2, Request.CurrentPage - 1);
                                    var endPage = Math.Min(StudentList.totalPages - 1, Request.CurrentPage + 1);
                                }

                                @for (int i = startPage; i <= endPage; i++)
                                {
                                    <li class="page-item @(Request.CurrentPage == i ? "active" : "")">
                                        <a @onclick="() => ShowPage(i)" class="page-link">@i</a>
                                    </li>
                                }

                                <!-- Puntos suspensivos si hay páginas ocultas al final -->
                                @if (Request.CurrentPage < StudentList.totalPages - 2)
                                {
                                    <li class="page-item disabled d-none d-sm-block">
                                        <span class="page-link">...</span>
                                    </li>
                                }

                                <!-- Última Página - solo visible cuando no es la página actual -->
                                @if (StudentList.totalPages > 1 && Request.CurrentPage < StudentList.totalPages)
                                {
                                    <li class="page-item d-none d-sm-block">
                                        <a @onclick="() => ShowPage(StudentList.totalPages)" class="page-link">
                                            @StudentList.totalPages
                                        </a>
                                    </li>
                                }

                                <!-- Botón Siguiente -->
                                <li class="page-item @(Request.CurrentPage == StudentList.totalPages ? "disabled" : "")">
                                    <a @onclick="GoToNextPage" class="page-link" aria-label="Siguiente">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>

                                <!-- Indicador de página actual en mobile -->
                                <li class="page-item disabled d-sm-none mx-2">
                                    <span class="page-link">
                                        @Request.CurrentPage / @StudentList.totalPages
                                    </span>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            }
        </div>
        <!-------------------------------------------------------------------------------------------------------------------------------------->

    </div>

    <script defer src="js/DataTable/dataTableOrderByName.js"></script>

    <CreateStudentProfileView onNewStudentCreated="@LoadStudentList"/>
}