@page "/accounting/students"

@inherits BaseView
@attribute [Authorize(Roles = "admin,cashier")]

@using wsmcbl.src.Model.Accounting
@using wsmcbl.src.View.Components.CreateStudent;

@if (IsLoading())
{
    <div class="loader"></div>
}
else
{
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Perfiles de cobro</h6>

            <div class="btn-group">
                <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#NewStudentModal">
                    Nuevo estudiante
                </button>

                <button type="button" class="btn btn-success btn-sm dropdown-toggle dropdown-toggle-split"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="sr-only">Toggle Dropdown</span>
                </button>

                <div class="dropdown-menu">
                    <a class="dropdown-item" @onclick="LoadStudentList">Actualizar</a>
                </div>
            </div>
        </div>
        
        <!------------------------------------------------------------------------------------------------------------------------------------->
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="d-flex align-items-center">
                        Mostrar
                        <select class="form-control form-control-sm d-inline-block w-auto mx-2" @onchange="ShowPageSize">
                            <option value="10">10</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                        registros
                    </label>
                </div>

                <div class="col-md-6 d-flex justify-content-end">
                    <div class="input-group" style="width: 200px;">
                        <input type="text" class="form-control form-control-sm" placeholder="Buscar..." @bind="Request.SearchText" @onkeyup="Searching">
                        @if (!string.IsNullOrEmpty(Request.SearchText))
                        {
                            <div class="">
                                <button type="button" class="btn btn-sm btn-outline-secondary" @onclick="ClearSearch">
                                    ✖
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
            @if (!hasData)
            {
                <div class="d-flex align-items-center justify-content-center">
                    <h5 class="text-gray-800">Sin datos</h5>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-bordered">

                        <thead>
                        <tr>
                            
                            <th @onclick="@(() => SortByColumn("studentId"))"
                                class="@(Request.sortBy == "studentId" ? "font-weight-bold" : "")">
                                Id
                                <span>@(Request.sortBy == "studentId" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>

                            <th @onclick="@(() => SortByColumn("fullName"))"
                                class="@(Request.sortBy == "fullName" ? "font-weight-bold" : "")">
                                Nombre
                                <span>@(Request.sortBy == "fullName" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>

                            <th @onclick="@(() => SortByColumn("tutor"))"
                                class="@(Request.sortBy == "tutor" ? "font-weight-bold" : "")">
                                Tutor
                                <span>@(Request.sortBy == "tutor" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>

                            <th @onclick="@(() => SortByColumn("enrollment"))"
                                class="@(Request.sortBy == "enrollment" ? "font-weight-bold" : "")">
                                Matrícula
                                <span>@(Request.sortBy == "enrollment" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>
                            
                            <th>Acción</th>
                        </tr>
                        </thead>
                        
                        <tbody>
                        @foreach (var item in StudentList!.data)
                        {
                            <tr>
                                <td>@item.studentId</td>
                                <td>@item.fullName</td>
                                <td>@item.tutor</td>
                                <td>@item.enrollmentLabel</td>
                                <td>
                                    <a href="/accounting/students/@item.studentId" class="btn btn-success btn-sm">Ver
                                        perfil</a>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
                <div class="row">
                        
                    <div class="col-sm-12 col-md-5">
                        <p>
                            Mostrando @StudentList.data.Count registros de @StudentList.quantity
                        </p>
                    </div>

                    <div class="col-sm-12 col-md-7">
                        <div class="dataTables_paginate paging_simple_numbers">
                            <ul class="pagination d-flex justify-content-end">
                                <!-- Botón Anterior -->
                                <li class="paginate_button page-item @(Request.CurrentPage == 1 ? "disabled" : "")">
                                    <a @onclick="GoToPreviousPage" class="page-link">Anterior</a>
                                </li>

                                <!-- Primera Página -->
                                <li class="paginate_button page-item @(Request.CurrentPage == 1 ? "active" : "")">
                                    <a @onclick="() => ShowPage(1)" class="page-link">1</a>
                                </li>

                                <!-- Páginas adyacentes a la página actual -->
                                @for (int i = Math.Max(2, Request.CurrentPage - 2); i <= Math.Min(StudentList.totalPages - 1, Request.CurrentPage + 2); i++)
                                {
                                    int pageNumber = i; // Asegúrate de que pageNumber sea igual a i
                                    <li class="paginate_button page-item @(Request.CurrentPage == pageNumber ? "active" : "")">
                                        <a @onclick="() => ShowPage(pageNumber)" class="page-link">@pageNumber</a>
                                    </li>
                                }

                                <!-- Página actual -->
                                @if (Request.CurrentPage > 1 && Request.CurrentPage < StudentList.totalPages)
                                {
                                    <li class="paginate_button page-item active">
                                        <a class="page-link">@Request.CurrentPage</a>
                                    </li>
                                }

                                <!-- ... si la página actual está lejos de la última página -->
                                @if (Request.CurrentPage < StudentList.totalPages - 2)
                                {
                                    <li class="paginate_button page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }

                                <!-- Última Página -->
                                @if (StudentList.totalPages > 1)
                                {
                                    <li class="paginate_button page-item @(Request.CurrentPage == StudentList.totalPages ? "active" : "")">
                                        <a @onclick="() => ShowPage(StudentList.totalPages)" class="page-link">@StudentList.totalPages</a>
                                    </li>
                                }

                                <!-- Botón Siguiente -->
                                <li class="paginate_button page-item @(Request.CurrentPage == StudentList.totalPages ? "disabled" : "")">
                                    <a @onclick="GoToNextPage" class="page-link">Siguiente</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    
                </div>
            }
        </div>
        <!-------------------------------------------------------------------------------------------------------------------------------------->
        
    </div>

    <script defer src="js/DataTable/dataTableOrderByName.js"></script>

    <CreateStudentProfileView onNewStudentCreated="@LoadStudentList"/>
}