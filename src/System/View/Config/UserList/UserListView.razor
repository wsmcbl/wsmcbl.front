@page "/configuration/users"

@inherits BaseView
@attribute [Authorize(Roles = "admin")]

@using wsmcbl.src.Utilities
@using wsmcbl.src.View.Config.CreateNewUser
@using wsmcbl.src.View.Config.UserInformationView

@if (IsLoading())
{
    <div class="loader"></div>
}
else
{
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Lista de usuarios del sistema</h6>

            <div class="btn-group">
                <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#NewUserModal">
                    Nuevo Usuario
                </button>

                <button type="button" class="btn btn-success btn-sm dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="sr-only">Toggle Dropdown</span>
                </button>

                <div class="dropdown-menu">
                    <a class="dropdown-item" @onclick="LoadUserList">Actualizar</a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <!---------------------------------------------------------->
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="d-flex align-items-center">
                        Mostrar
                        <select class="form-control form-control-sm d-inline-block w-auto mx-2" @onchange="ShowPageSize">
                            <option value="10">10</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                        registros
                    </label>
                </div>

                <div class="col-md-6 d-flex justify-content-end">
                    <div class="input-group" style="width: 200px;">
                        <input type="text" class="form-control form-control-sm" placeholder="Buscar..." @bind="Request.SearchText" @onkeyup="Searching">
                        @if (!string.IsNullOrEmpty(Request.SearchText))
                        {
                            <div class="">
                                <button type="button" class="btn btn-sm btn-outline-secondary" @onclick="ClearSearch">
                                    ✖
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
            @if (!hasData)
            {
                <div class="d-flex align-items-center justify-content-center">
                    <h5 class="text-gray-800">Sin datos</h5>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-bordered">

                        <thead>
                        <tr>
                            <th @onclick="@(() => SortByColumn("userId"))"
                                class="@(Request.sortBy == "userId" ? "font-weight-bold" : "")">
                                Id
                                <span>@(Request.sortBy == "userId" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>
                            
                            <th @onclick="@(() => SortByColumn("name"))"
                                class="@(Request.sortBy == "name" ? "font-weight-bold" : "")">
                                Nombre
                                <span>@(Request.sortBy == "name" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>
                            
                            <th @onclick="@(() => SortByColumn("roleId"))"
                                class="@(Request.sortBy == "roleId" ? "font-weight-bold" : "")">
                                Rol
                                <span>@(Request.sortBy == "roleId" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>

                            <th @onclick="@(() => SortByColumn("isActive"))"
                                class="@(Request.sortBy == "isActive" ? "font-weight-bold" : "")">
                                Rol
                                <span>@(Request.sortBy == "isActive" ? (Request.isAscending ? "↑" : "↓") : "↑")</span>
                            </th>
                            
                            <th>Acción</th>
                        </tr>
                        </thead>

                        <tbody>
                        @foreach (var item in UserPaginator!.data)
                        {
                            <tr>
                                <td> @item.userId </td>
                                <td> @item.fullName </td>
                                <td> @item.RoleName </td>
                                <td>
                                    <span class="status-label @item.isActive.ToActiveClass()">
                                        @item.isActive.ToActive()
                                    </span>
                                </td>
                                <td>
                                    <div class="dropdown no-arrow">
                                        <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                                           data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                                        </a>

                                        <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                                             aria-labelledby="dropdownMenuLink" style="min-width: 200px;">
                                            <div class="dropdown-header">Seleccione una opción:</div>
                                            <button class="dropdown-item" @onclick="() => ViewUserData(item.userId)">Ver perfil</button>
                                            <a class="dropdown-item" @onclick="() => ChangePassword(item.userId)">Cambiar contraseña</a>
                                            <div class="dropdown-divider"></div>
                                            <a class="dropdown-item" @onclick="() => ChangeUserState(item.userId, item.fullName)">Activar / Desactivar</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
                <div class="row">
                        
                    <div class="col-sm-12 col-md-5">
                        <p>
                            Mostrando @UserPaginator.data.Count registros de @UserPaginator.quantity
                        </p>
                    </div>

                    <div class="col-sm-12 col-md-7">
                        <div class="dataTables_paginate paging_simple_numbers">
                            <ul class="pagination d-flex justify-content-end">
                                <!-- Botón Anterior -->
                                <li class="paginate_button page-item @(Request.CurrentPage == 1 ? "disabled" : "")">
                                    <a @onclick="GoToPreviousPage" class="page-link">Anterior</a>
                                </li>

                                <!-- Primera Página -->
                                <li class="paginate_button page-item @(Request.CurrentPage == 1 ? "active" : "")">
                                    <a @onclick="() => ShowPage(1)" class="page-link">1</a>
                                </li>

                                <!-- ... si la página actual está lejos de la primera página -->
                                @if (Request.CurrentPage > 3)
                                {
                                    <li class="paginate_button page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }

                                <!-- Página actual -->
                                @if (Request.CurrentPage > 1 && Request.CurrentPage < UserPaginator.totalPages)
                                {
                                    <li class="paginate_button page-item active">
                                        <a class="page-link">@Request.CurrentPage</a>
                                    </li>
                                }

                                <!-- ... si la página actual está lejos de la última página -->
                                @if (Request.CurrentPage < UserPaginator.totalPages - 2)
                                {
                                    <li class="paginate_button page-item disabled">
                                        <span class="page-link">...</span>
                                    </li>
                                }

                                <!-- Última Página -->
                                @if (UserPaginator.totalPages > 1)
                                {
                                    <li class="paginate_button page-item @(Request.CurrentPage == UserPaginator.totalPages ? "active" : "")">
                                        <a @onclick="() => ShowPage(UserPaginator.totalPages)" class="page-link">@UserPaginator.totalPages</a>
                                    </li>
                                }

                                <!-- Botón Siguiente -->
                                <li class="paginate_button page-item @(Request.CurrentPage == UserPaginator.totalPages ? "disabled" : "")">
                                    <a @onclick="GoToNextPage" class="page-link">Siguiente</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    
                </div>
            }
            <!---------------------------------------------------------->
        </div>
    </div>
    
    <CreateNewUserModal UserEntity="@User" OnUserUpdated="HandleUserUpdated"/>
    <UserInformationModal UserInfo="@User"/>
    <ViewUserInfo userId="@UserIdForViewInformation"/>
    
    
    <script defer src="js/DataTable/dataTableOrderByName.js"></script>
}
