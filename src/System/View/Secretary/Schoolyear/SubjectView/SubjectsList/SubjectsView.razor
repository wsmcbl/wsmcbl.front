@page "/secretary/catalogs/subjects"

@using wsmcbl.src.Utilities
@using wsmcbl.src.View.Secretary.Schoolyear.SubjectView.NewSubjects
@inherits BaseView;
@attribute [Authorize(Roles = "admin, secretary, cashier")]

@if (IsLoading())
{
    <div class="loader"></div>
}
else
{
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Lista de asignaturas</h6>
            <div class="btn btn-primary btn-sm" @onclick="CreateNewSubject">Nueva Asignatura</div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="dataTable" class="table table-bordered">
                    <thead>
                    <tr>
                        <th>Id</th>
                        <th>Area</th>
                        <th>Grado</th>
                        <th>Nombre</th>
                        <th>¿Reprobable?</th>
                        <th>Semestre</th>
                        <th>Iniciales</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                    </thead>
                    <tfoot>
                    <tr>
                        <th>Id</th>
                        <th>Area</th>
                        <th>Grado</th>
                        <th>Nombre</th>
                        <th>¿Reprobable?</th>
                        <th>Semestre</th>
                        <th>Iniciales</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                    </tfoot>
                    <tbody>
                    @if (Subjects != null)
                    {
                        foreach (var item in Subjects.OrderByDescending(t => t.number))
                        {
                            var degreeName = DegreeList.FirstOrDefault(d => d.degreeDataId == item.degreeDataId)!.label;
                            var areaName = AreaList.FirstOrDefault(d => d.areaId == item.areaId)!.name;
                            
                            <tr>
                                <td>@item.subjectDataId</td>
                                <td>@areaName</td>
                                <td>@degreeName</td>
                                <td>@item.name</td>
                                <td>@item.isMandatory.ToStringYesOrNo()</td>
                                <td>@item.semester.ToSemester()</td>
                                <td>@item.initials</td>
                                <td>
                                    <span class="status-label @(item.isActive ? "active-status" : "inactive-status")">
                                        @(item.isActive ? "ACTIVO" : "INACTIVO")
                                    </span>
                                </td>
                                <td>
                                    <a class="btn btn-outline-secondary btn-sm">
                                        Editar
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script src="js/DataTable/dataTableWhitOutOrder.js"></script>
    
    <CreateSubjectDataModal OnEditCompleted="OnParametersSetAsync"/>
}