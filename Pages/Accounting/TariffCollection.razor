@page "/accouting/tariffcollection/{StudenID}"

@using System.Text.Json
@using wsmcbl.front.Controllers
@using wsmcbl.front.Models.Accounting

@inject StudentController controller;
@inject TariffController tariffcontroller;
@inject IJSRuntime JSRuntime;
@inject HttpClient httpClient;
@inject NavigationManager navigationManager;
@inject SweetAlertService Swal;

@* validamos si el estudiante no es nulo y si la lista de tarifas del catalogo tiene al menos 1 elemento.  *@
@if (student == null || tariffs == null)
{
    <div class="loader"></div>
}
else
{
    <link rel="stylesheet" href="/css/TarriffCollection.css">
    @* Panel de informacion del estudiante *@
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Información</h6>
            <button type="button" class="btn btn-success" 
                    @onclick="(e) => ConfirmTransaction()">Cobrar
            </button>
        </div>
        <form class="p-5">
            <div class="row">

                <div class="col">
                    <p class="text-left">Nombre: @student.fullName</p>
                    <p class="text-left">Año Lectivo: @student.schoolyear</p>
                    <p class="text-left">Codigo: @student.studentId</p>
                </div>

                <div class="col">
                    <p class="text-left">Grado: @student.enrollmentLabel</p>
                    <p class="text-left">Tutor: @student.tutor</p>
                </div>
            </div>
        </form>
        @* Botones *@
        <div class="p1">
            <div class="row">
                <div class="col-6 text-center">
                    <a href="/accouting/tariffcollection" class="btn btn-success btn-sm">Estado de cuenta</a>
                </div>
            </div>
        </div>
        
        @* Tabla de Aranceles *@
        <div class="p-3 table-responsive ">
            <table class="table table-bordered" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Año Lectivo</th>
                        <th>Concepto</th>
                        <th>Monto</th>
                        <th>Con Mora</th>
                        <th>Fecha Vencimiento</th>
                        <th>Seleccionar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in tariffs)
                    {
                        <tr>
                            <td>@item.TariffId</td>
                            <td>@item.SchoolYear</td>
                            <td>@item.Concept</td>
                            <td>@item.Amount</td>
                            <td>@item.IsLate</td>
                            <td>@item.DueDate</td>
                            <td>
                                @if (student.transactions != null &&
                                student.transactions.Any(t => t.Details.Any(tt => tt.TariffId == item.TariffId)))
                                {
                                    <button type="button" class="btn btn-danger btn-sm " data-toggle="modal"
                                        data-target="#finistariff" disabled>Pagado
                                    </button>
                                }
                                else
                                {
                                <td>
                                    <input type="checkbox" @onchange="(e) => OnSelectItemChanged(e, item)" />
                                </td>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @* Formularios POP UP *@
    <!-- Finiish Modal Pay -->
    <div class="modal fade" id="finistariff" tabindex="-1" aria-labelledby="finistariff" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="finistariff">Detalle de la transacción</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @* detalles de la transaccion *@
                    <div class="row centrar">
                        <div class="finishpaymodal">
                            <table>
                                <thead>
                                    <tr>
                                        <th>Concepto</th>
                                        <th>Monto</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in selectedTariffs)
                                    {
                                        <tr>
                                            <td>@item.Concept</td>
                                            <td>@item.Amount</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <hr/>
                    @* cambio y monto total *@
                    <div class="anchototal">

                        <div class="row">
                            <div class="col pay">
                                <div>Total: </div>
                            </div>
                            <div class="col pay">
                                <input id="modalAmount" type="number" class="form-control p1" placeholder="C$ 00.00" disabled value="@subtotal">
                            </div>
                        </div>

                        <div class="row">
                            <div class="col pay">
                                <div>Recibí: </div>
                            </div>
                            <div class="col pay">
                                <input id="amoun" type="number" class="form-control p1" placeholder="C$ 00.00">
                            </div>
                        </div>

                        <div class="row">
                            <div class="col pay">
                                <div>Cambio: </div>
                            </div>
                            <div class="col pay">
                                <input id="chamge" type="number" class="form-control p1" placeholder="C$ 00.00" disabled>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-success" 
                    @onclick="(e) => MultiPay()">Cobrar
                    </button>
                </div>
            </div>
        </div>
    <script defer src="/js/TarriffCollection.js"></script>
    </div>

}

@* 
Gente que tiene tarifas pagadas
2019-1000JARR
2024-2963NSZL
2024-2175MJOR *@

@code
{

    public double subtotal = 0;

    Tariff tariffSelected = new Tariff();

    //Lista de tarifas
    public List<Tariff> selectedTariffs = new List<Tariff>();

    List<Tariff> tariffs;
    StudentEntity student;     
    
    [Parameter]
    public string StudenID {get; set; }   
    
    protected override async Task OnInitializedAsync()
    {
        //obtenemos el Id del estudiante y su informacion completa
        var segments = navigationManager.ToAbsoluteUri(navigationManager.Uri).Segments;
        StudenID = segments.Last().Trim('/'); // Para asegurarte de quitar cualquier barra adicional al final
        student = await controller.GetStudentEntityAsync(StudenID);

        //Obtenemos la lista completa de tarifas del catalogo
        tariffs = await tariffcontroller.GetTariffs();
    }

    public void finalModalPay(Tariff item)
    {
        tariffSelected = item;
    }

    void ReloadPage()
    {
        navigationManager.NavigateTo(navigationManager.Uri, forceLoad: true);
    }

    private void OnSelectItemChanged(ChangeEventArgs e, Tariff tariff)
    {
        if ((bool)e.Value)
        {
            if (!selectedTariffs.Contains(tariff))
            {
                selectedTariffs.Add(tariff);
                subtotal = subtotal + tariff.Amount;
                Console.WriteLine(subtotal);
            }
        }
        else
        {
            if (selectedTariffs.Contains(tariff))
            {
                selectedTariffs.Remove(tariff);
                subtotal = subtotal - tariff.Amount;
                Console.WriteLine(subtotal);
            }
        }
    }

    async Task MultiPay()
    {
        var transaction = new TransactionDto()
        {
            cashierId = "caj-ktinoco",
            studentId = StudenID,
            dateTime = DateTime.UtcNow,
        };

        transaction.setTariff(selectedTariffs, student.discount);

        var result = await tariffcontroller.SendPay(transaction);

        if (result.IsSuccessStatusCode)
        {
            await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "¡Pago Exitoso!",
                Text = "La transacción se completó correctamente.",
                Icon = SweetAlertIcon.Success
            });

            await JSRuntime.InvokeVoidAsync("window.open", $"/transactions/invoices/{transaction.studentId}", "_blank");

            ReloadPage();
        }
        else
        {
            await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "¡Error en el Pago!",
                Text = "La transacción no se completó correctamente.",
                Icon = SweetAlertIcon.Error
            });
        }
    }


    async Task ConfirmTransaction()
    {
        await JSRuntime.InvokeVoidAsync("showModal", "finistariff");
    }

}

