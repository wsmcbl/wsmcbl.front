@page "/accouting/tariffcollection/{StudenID}"

@using System.Text.Json
@using wsmcbl.front.Controllers
@using wsmcbl.front.Models.Accounting

@inject StudentController controller;
@inject TariffController tariffcontroller;
@inject IJSRuntime JSRuntime;
@inject HttpClient httpClient;
@inject NavigationManager navigationManager;
@inject SweetAlertService Swal;

@* validamos si el estudiante no es nulo y si la lista de tarifas del catalogo tiene al menos 1 elemento.  *@
@if (student == null || tariffs == null)
{
    <div class="loader"></div>
}
else
{
    <link rel="stylesheet" href="/css/TarriffCollection.css">
    @* Tabla de aranceles del estudiante *@
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold">
                <a href="#" data-toggle="modal" data-target="#studentInfoModal">
                    Información de @student.fullName <i class="fas fa-external-link-alt"></i>
                </a>
            </h6>
            <button type="button" class="btn btn-success"
                    @onclick="(e) => ConfirmTransaction()">
                Cobrar
            </button>
        </div>

        @* Tabla de Aranceles *@
        <div class="p-3 table-responsive ">
            <table class="table table-bordered" width="100%" cellspacing="0">
                <thead>
                <tr>
                    <th>#</th>
                    <th>Año Lectivo</th>
                    <th>Concepto</th>
                    <th>Monto</th>
                    <th>Con Mora</th>
                    <th>Fecha Vencimiento</th>
                    <th>Seleccionar</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in tariffs)
                {
                    <tr>
                        <td>@item.TariffId</td>
                        <td>@item.SchoolYear</td>
                        <td>@item.Concept</td>
                        <td>@item.Amount</td>
                        <td>@item.IsLate</td>
                        <td>@item.DueDate</td>
                        <td>
                            @if (student.transactions != null &&
                                student.transactions.Any(t => t.Details.Any(tt => tt.TariffId == item.TariffId)))
                            {
                                <button type="button" class="btn btn-danger btn-sm " data-toggle="modal"
                                        data-target="#finistariff" disabled>
                                    Pagado
                                </button>
                            }
                            else
                            {
                                <td class="center-checkbox">
                                    <input type="checkbox" id="checkbox-@item.TariffId" @onchange="(e) => OnSelectItemChanged(e, item)"/>
                                </td>
                            }
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Finiish Modal Pay -->
    <div class="modal fade" id="finistariff" tabindex="-1" aria-labelledby="finistariff" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="finistariff">Detalle de la transacción</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @* detalles de la transaccion *@
                    <div class="row centrar">
                        <div class="finishpaymodal">
                            <table class="detailpaytable">
                                <thead>
                                <tr>
                                    <th>Concepto</th>
                                    <th>Monto</th>
                                    <th>Desc</th>
                                    <th>Mora</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var item in selectedTariffs)
                                {
                                    <tr>
                                        <td>@item.Concept</td>
                                        <td>@item.Amount</td>
                                        <td>@student.discount</td>
                                        @if (item.IsLate)
                                        {
                                            <td>
                                                @{
                                                    var mora = item.Amount * taxArrears;
                                                    @mora
                                                }
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                0
                                            </td>
                                        }
                                    </tr>
                                }
                                </tbody>

                                <tfoot>
                                <tr>
                                    <th>Totales</th>
                                    <th class="subtotal">@subtotal</th>
                                    <th class="discount">@discount</th>
                                    <th class="arrears">@arrears</th>
                                </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <hr/>
                    @* cambio y monto total *@
                    <div class="anchototal">

                        <div class="row">
                            <div class="col pay">
                                <div>Recibí: </div>
                            </div>
                            <div class="col pay">
                                <input id="amoun" type="number" class="form-control p1" placeholder="C$ 00.00">
                            </div>
                        </div>

                        <div class="row">
                            <div class="col pay">
                                <div>Total: </div>
                            </div>
                            <div class="col pay">
                                <input id="modalAmount" type="number" class="form-control p1" placeholder="C$ 00.00" disabled value="@TOTAL">
                            </div>
                        </div>

                        <div class="row">
                            <div class="col pay">
                                <div>Cambio: </div>
                            </div>
                            <div class="col pay">
                                <input id="chamge" type="number" class="form-control p1" placeholder="C$ 00.00" disabled>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="modal-footer">
                    <div class="left-container">
                        <input type="checkbox" id="moraCheckbox" class="exomora" @onchange="ExoMora" />
                        <label class="form-check-label exomora" for="moraCheckbox">Exonerar mora</label>
                    </div>
                    
                    <div class="right-container">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Atras</button>
                        <button type="button" class="btn btn-success" @onclick="(e) => MultiPay()">Cobrar</button>
                    </div>
                </div>
                
            </div>
        </div>


        <script defer src="/js/TarriffCollection.js"></script>
    </div>


    @* StudentInfoModa *@
    <div class="modal fade" id="studentInfoModal" tabindex="-1" aria-labelledby="studentInfoModal" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="finistariff">Detalle del estudiante</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <div class="info-box">
                                    <span class="info-box-icon bg-info text-white">
                                        <i class="fas fa-user"></i>
                                    </span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Nombre</span>
                                        <span class="info-box-value">@student.fullName</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="info-box">
                                    <span class="info-box-icon bg-secondary text-white">
                                        <i class="fas fa-id-badge"></i>
                                    </span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Código</span>
                                        <span class="info-box-value">@student.studentId</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="info-box">
                                    <span class="info-box-icon bg-success text-white">
                                        <i class="fas fa-graduation-cap"></i>
                                    </span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Grado</span>
                                        <span class="info-box-value">@student.enrollmentLabel</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="info-box">
                                    <span class="info-box-icon bg-warning text-white">
                                        <i class="fas fa-calendar-alt"></i>
                                    </span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Año Lectivo</span>
                                        <span class="info-box-value">@student.schoolyear</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="info-box">
                                    <span class="info-box-icon bg-danger text-white">
                                        <i class="fas fa-chalkboard-teacher"></i>
                                    </span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Tutor</span>
                                        <span class="info-box-value">@student.tutor</span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <div class="info-box">
                                    <span class="info-box-icon bg-primary text-white">
                                        <i class="fas fa-percent"></i>
                                    </span>
                                    <div class="info-box-content">
                                        <span class="info-box-text">Descuento</span>
                                        <span class="info-box-value">@student.discount</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @* Botones *@
                    <div class="card-footer text-center">
                        <a href="/accouting/tariffcollection" class="btn btn-info btn-sm">Estado de cuenta</a>
                    </div>

                </div>
            </div>
        </div>
    </div>
}

@* 
Gente que tiene tarifas pagadas
2019-1000JARR
2024-2963NSZL
2024-2175MJOR *@

@code
{

    public double subtotal = 0.0;
    public double TOTAL = 0.0;

    @* Se obtendra de un end-point en el futuro *@
    public double taxArrears = 0.10;
    public double arrears = 0.0;
    public double discount = 0.0;

    //Lista de tarifas a pagar
    public List<Tariff> selectedTariffs = new List<Tariff>();

    List<Tariff> tariffs;
    StudentEntity student;

    [Parameter] public string StudenID { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //obtenemos el Id del estudiante y su informacion completa
        var segments = navigationManager.ToAbsoluteUri(navigationManager.Uri).Segments;
        StudenID = segments.Last().Trim('/'); // Para asegurarte de quitar cualquier barra adicional al final

        try
        {
            student = await controller.GetStudentEntityAsync(StudenID);
        }
        catch(Exception ex)
        {
            SweetAlertResult error = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Obtuvimos problemas al cargar los datos del estudiante",
                Text = $"{ex.Message}",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true
            });
        }
    

        //Obtenemos la lista completa de tarifas del catalogo
        tariffs = await tariffcontroller.GetTariffs("student", StudenID);
    }


    private void OnSelectItemChanged(ChangeEventArgs e, Tariff tariff)
    {
        if ((bool)e.Value)
        {
            if (!selectedTariffs.Contains(tariff))
            {
                selectedTariffs.Add(tariff);
                subtotal = subtotal + tariff.Amount;
                discount += student.discount;

                if (tariff.IsLate)
                {
                    arrears += tariff.Amount * taxArrears;
                }
            }

            Console.WriteLine(arrears);
        }
        else
        {
            if (selectedTariffs.Contains(tariff))
            {
                selectedTariffs.Remove(tariff);
                subtotal = subtotal - tariff.Amount;
                discount -= student.discount;

                if (tariff.IsLate)
                {
                    arrears -= tariff.Amount * taxArrears;
                }
            }

            Console.WriteLine(arrears);
        }
    }

    async Task MultiPay()
    {
        var transaction = new TransactionDto()
        {
            cashierId = "caj-ktinoco",
            studentId = StudenID,
            dateTime = DateTime.UtcNow,
        };

        transaction.setTariff(selectedTariffs, student.discount, arrears);

        var result = await tariffcontroller.SendPay(transaction);


        if (result != string.Empty)
        {
            await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "¡Pago Exitoso!",
                Text = "La transacción se completó correctamente.",
                Icon = SweetAlertIcon.Success
            });

            await JSRuntime.InvokeVoidAsync("window.open", $"/transactions/invoices/{result}", "_blank");

            ReloadPage();
        }
        else
        {
            await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "¡Error en el Pago!",
                Text = "La transacción no se completó correctamente.",
                Icon = SweetAlertIcon.Error
            });
        }
    }

    async Task ConfirmTransaction()
    {
        TOTAL = subtotal + arrears - discount;
        await JSRuntime.InvokeVoidAsync("showModal", "finistariff");
    }

    void ReloadPage()
    {
        navigationManager.NavigateTo(navigationManager.Uri, forceLoad: true);
    }

    void ExoMora(ChangeEventArgs e)
    {
        if ((bool)e.Value)
        {
            TOTAL -= arrears;
        }
        else
        {
            TOTAL += arrears;
        }

        Console.WriteLine($"TOTAL: {TOTAL}");
    }

}