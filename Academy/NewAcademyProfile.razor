@page "/academy/tariff-profiles/new"
@using wsmcbl.front.Controllers
@using wsmcbl.front.model.Secretary.Output


@inject AcademyController controller;

<link rel="stylesheet" href="/css/Academy/NewAcademyProfile.css">

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-primary">Nuevo Perfil de Estudiante</h6>
        <button type="button" class="btn btn-success"
                @onclick="(e) => Save()">Guardar
        </button>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-6">
                <div class="card-body">
                    <div class="row">
                        <div class="col">
                            <label style="display: inline-block; width: 150px;">Primer Nombre:</label>
                            <input type="text" class="form-control" style="margin-bottom: 10px" @bind="FirsName">
                            
                            <label style="display: inline-block; width: 150px;">Segundo Nombre:</label>
                            <input type="text" class="form-control" style="margin-bottom: 10px" @bind="SecondName">
                            
                            <label style="display: inline-block; width: 150px;">Primer Apellido:</label>
                            <input type="text" class="form-control" style="margin-bottom: 10px" @bind="FirsSurName">
                            
                            <label style="display: inline-block; width: 150px;">Segundo Apellido:</label>
                            <input type="text" class="form-control" style="margin-bottom: 10px" @bind="SecondSurName">
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="card-body">
                    <div class="col">
                        <label style="display: inline-block; width: 150px;">Tutor:</label>
                        <input type="text" class="form-control" style="margin-bottom: 10px" @bind="Tutor">

                        <label style="display: inline-block; width: 150px;">Sexo:</label>
                        <select id="sexo" style="margin: 0px" @onchange="GetSexo">
                            @foreach (var option in sexo)
                            {
                            <option value="@option">@option</option>
                            }
                        </select>

                        <label style="display: inline-block; width: 150px; margin-top: 15px">Fecha de Nacimiento</label>
                        <input id="fechaNacimiento" type="date" class="form-control p1" placeholder="11/02/2001" @bind="Birthday">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code
{
    private string FirsName;
    private string SecondName;
    private string FirsSurName;
    private string SecondSurName;
    
    private string Tutor;
    private bool Sex;
    private DateTime Birthday;

    List<string> sexo = new List<string> { "Femenino", "Masculino"};

    void GetSexo(ChangeEventArgs e)
    {
        var selectSexo = e.Value.ToString();

        if(selectSexo == "Femenino")
        {
            Sex = false;
        }else{
            Sex = true;
        }
    }

    protected async Task Save()
    {
        Console.WriteLine(FirsName);
        Console.WriteLine(SecondName);
        Console.WriteLine(FirsSurName);
        Console.WriteLine(SecondSurName);
        Console.WriteLine(Tutor);
        Console.WriteLine(Birthday);
        Console.WriteLine(Sex);

        StudentEntityDto NewStudent = new StudentEntityDto
        {
            Name = FirsName,
            SecondName = SecondName,
            Surname = FirsSurName,
            SecondSurname = SecondSurName,
            Sex = Sex,
            Birthday = new Birthday
            {
                Year = Birthday.Year,
                Month = Birthday.Month,
                Day = Birthday.Day
            },
            Tutor = Tutor
        };

        var result = await controller.PostNewStudent(NewStudent);

    }
    
    

}